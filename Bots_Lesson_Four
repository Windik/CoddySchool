import telebot
from telebot import types #
import datetime
import os
# –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–∞–π—Ç–æ–≤
import requests
from bs4 import BeautifulSoup
import random


current_path = os.path.dirname(os.path.abspath(__file__))
bot = telebot.TeleBot("Token")

dela = ""
name = ""
messages = [""]
meme = ["https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQI2Ezlr8pw8qhuzdlbiHFZNohvT6eSB0hgqA&s",
        "https://habrastorage.org/r/w1560/webt/m9/z5/vw/m9z5vwnbzblbe0xgppboty60nbo.png",
        "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4FUsYSFen8jfPJ2s1u1iaK1t2RZ-nqmpwpg&s",
        "https://www.m24.ru/b/d/nBkSUhL2hFAmmMu_Jr6BvMKnxdDs9pC9yyqYy7jLs2KQeXqLBmmcmzZh59JUtRPBsdaJqSfJd54qEr7t1mNwKSGK7WY=stGJBvveSz5mlUrbWZs0eA.jpg",
        "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT3Qf3CkTvnfHdY4NGKg1HeYqK7xhkdtX9ZYg&s",
        "https://cdn.trinixy.ru/pics6/20240611/250025_1_trinixy_ru.jpg"]


@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton("–°–∞–π—Ç –°—É–ª—Ç–∞–Ω–∞", "https://login.school.mosreg.ru/")
    markup.add(button1)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è –°—É–ª—Ç–∞–Ω –ù–µ–†–∞–≤–∏–ª—å! –¢—ã –ø–æ–ø–∞–ª –≤ –º–æ–π –∫–ª—É–±! –ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?", reply_markup=markup)

@bot.message_handler(commands=['time'])
def time_message(message):
    current_time = datetime.datetime.now()
    bot.send_message(message.chat.id, 
                     f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {current_time}")

@bot.message_handler(content_types=['text'])
def echo_message(message):

    if message.from_user.first_name == "–í–∞–Ω—è":
        bot.send_message(message.chat.id, "–¢—ã –ù–ï–ª—É–∑–µ—Ä, –∞ –¥–≤–æ–∏—à–Ω–∏–∫!")

    global messages, meme
    messages.append(message.text)
    print(f"USERNAME: {message.from_user.username}\nFIRST_NAME: {message.from_user.first_name}\nLAST_NAME: {message.from_user.last_name}\nMESSAGE:", messages[-1])
    with open(f"{current_path}\\messages.doc", "a") as file:
        file.write(f"Time: {datetime.datetime.now()}\n")
        file.write(f"USERNAME: {message.from_user.username}\n")
        file.write(f"FIRST_NAME: {message.from_user.first_name}\n")
        file.write(f"LAST_NAME: {message.from_user.last_name}\n")
        file.write(f"MESSAGE: {messages[-1]}\n\n")
          
    if message.text.lower() in ["–ø—Ä–∏–≤–µ—Ç", "–∑–¥–∞—Ä–æ–≤–∞", "–π–æ"]:
        bot.send_message(message.chat.id, "–í–∞–Ω—è, –ª–æ–ª, –¥–∞–π —Ç–µ–ª–µ—Ñ–æ–Ω!")
    
    if message.text.lower() == "–ø–æ–º–æ—á—å –≤–∞–Ω–µ?":
        markup_buttons = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("–î–∞, —Ç–∞–∫ –∏ –±—ã—Ç—å...")
        button2 = types.KeyboardButton("–ù–∏ –≤ –∫–æ–µ–º —Å–ª—É—á–∞–µ!")
        markup_buttons.add(button1, button2)
        bot.send_message(message.chat.id, "–°–∞–º —Ä–µ—à–∞–π...", reply_markup=markup_buttons)

    # –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ò–≤–∞–Ω–∞ –ì–µ–æ—Ä–≥–∏–µ–≤–∏—á–∞ (–§–∞–º–∏–ª–∏—è —Å–ª–∏—à–∫–æ–º –∏–∑–≤–µ—Å—Ç–Ω–∞—è, —á—Ç–æ–±—ã –µ–µ –Ω–∞–∑—ã–≤–∞—Ç—å)
    if message.text.lower() == "–∫—É—Ä—Å –≤–∞–ª—é—Ç":
        data = requests.get('https://www.cbr-xml-daily.ru/daily_json.js').json()
        USD = data["Valute"]["USD"]["Value"]
        bot.send_message(message.chat.id, f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –∫ –†—É–±–ª—é: {USD}")
        
    # –ü—Ä–∏—Å—ã–ª–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
    if "–ø—Ä–∏—à–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É" in message.text.lower():
        parts = message.text.split(" ")
        found = parts[-1]
        print(found)
        data = requests.get(f'https://www.google.com/search?q={found}')

        soup = BeautifulSoup(data.text, "html.parser")
        img_url = soup.find_all('img')
        print(img_url)
        result = "–ö–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        if len(img_url) > 0:
            result = img_url[0].get('src')
            print(result)
        bot.send_message(message.chat.id, result)


    # –ü—Ä–∏—Å—ã–ª–∞–µ–º –º–µ–º—ã
    if "–ø—Ä–∏—à–ª–∏ –º–µ–º" in message.text.lower():
        bot.send_photo(message.chat.id, random.choice(meme))

    # –ü—Ä–∏—Å—ã–ª–∞–µ–º —Å–º–∞–π–ª–∏–∫–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É
    if "–ø—Ä–∏—à–ª–∏ —Å–º–∞–π–ª" in message.text.lower():
        parts = message.text.split(" ")
        found = parts[-1]
        if found == "—Ç–∏–≥—Ä–∞":
            bot.send_message(message.chat.id, "üêØ")
        elif found == "–∫–æ—Ç":
            bot.send_message(message.chat.id, "üò∫")
        else:
            bot.send_message(message.chat.id, f"–°–º–∞–π–ª–∫–∞ '{found}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üò¢")

    if message.text.lower() == "–∫–∞–∫ –¥–µ–ª–∞?":
        bot.send_message(message.chat.id, "–í—Å–µ —Ö–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ. –ê –∫–∞–∫ —É —Ç–µ–±—è?")
        bot.register_next_step_handler(message, how_are_you)

    if message.text.lower() == "–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?":
        bot.send_message(message.chat.id, "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ù–µ—Ä–∞–≤–∏–ª—å. –ê –∫–∞–∫ —Ç–µ–±—è?")
        bot.register_next_step_handler(message, get_name)

def wallet(message):
    bot.send_message(message.chat.id, f"")

def get_name(message):
    global name
    name = message.text
    bot.send_message(message.chat.id, f"–†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {name}")

def how_are_you(message):
    global dela
    if message.text.lower() == "–≤—Å–µ —Ö–æ—Ä–æ—à–æ":
        bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ!")

bot.polling(none_stop=True, timeout=0)
