import telebot
from telebot import types #
import datetime
import os
# –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–∞–π—Ç–æ–≤
import requests
from bs4 import BeautifulSoup
import random

current_path = os.path.dirname(os.path.abspath(__file__))
bot = telebot.TeleBot("TOKEN")

dela = ""
name = ""
messages = [""]
meme = ["https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQI2Ezlr8pw8qhuzdlbiHFZNohvT6eSB0hgqA&s",
        "https://habrastorage.org/r/w1560/webt/m9/z5/vw/m9z5vwnbzblbe0xgppboty60nbo.png",
        "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4FUsYSFen8jfPJ2s1u1iaK1t2RZ-nqmpwpg&s",
        "https://www.m24.ru/b/d/nBkSUhL2hFAmmMu_Jr6BvMKnxdDs9pC9yyqYy7jLs2KQeXqLBmmcmzZh59JUtRPBsdaJqSfJd54qEr7t1mNwKSGK7WY=stGJBvveSz5mlUrbWZs0eA.jpg",
        "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT3Qf3CkTvnfHdY4NGKg1HeYqK7xhkdtX9ZYg&s",
        "https://cdn.trinixy.ru/pics6/20240611/250025_1_trinixy_ru.jpg"]

# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ª–µ–≥–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
# –ü–µ—Ä–µ–¥–∞–µ–º –≤ —Ñ—É–Ω–∫—Ü–∏—é —Ç—Ä–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞: message, message_text,
# –∏ answer
def bot_answer(message, message_text, answer):
    # –ï—Å–ª–∏ —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π message_text - —Å—Ç—Ä–æ–∫–∞
    if type(message_text) is str: 
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å message_text
        if message.text.lower() == message_text.lower():
            bot.send_message(message.chat.id, answer)
    # –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è message_text - —Å–ø–∏—Å–æ–∫
    elif type(message_text) is list:
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞–µ–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        if message.text.lower() in message_text:
            bot.send_message(message.chat.id, answer)

def bot_answer_keyboard(message, message_text, buttons_text, answer_message):
    if message.text.lower() == message_text:
        markup_buttons = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        for button in buttons_text:
            markup_buttons.add(types.KeyboardButton(button))
        bot.send_message(message.chat.id, answer_message, reply_markup=markup_buttons)
     

@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton("–°–∞–π—Ç –°—É–ª—Ç–∞–Ω–∞", "https://login.school.mosreg.ru/")
    markup.add(button1)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è –°—É–ª—Ç–∞–Ω –ù–µ–†–∞–≤–∏–ª—å! –¢—ã –ø–æ–ø–∞–ª –≤ –º–æ–π –∫–ª—É–±! –ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?", reply_markup=markup)

@bot.message_handler(commands=['time'])
def time_message(message):
    current_time = datetime.datetime.now()
    bot.send_message(message.chat.id, 
                     f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {current_time}")

@bot.message_handler(content_types=['text'])
def echo_message(message):

    bot_answer(message, "–í–∞–Ω—è", "–¢—ã –ù–ï–ª—É–∑–µ—Ä, –∞ –¥–≤–æ–∏—à–Ω–∏–∫!")
    bot_answer(message, "–ö–∞–∫ –¥–µ–ª–∞?", "–ü–æ–∫–∞ –Ω–µ —Ä–æ–¥–∏–ª–∞!")
    bot_answer(message, "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å", "–Ø —É–º–µ—é –¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –≤–µ—â–∏....!")

    global messages, meme
    messages.append(message.text)
    print(f"USERNAME: {message.from_user.username}\nFIRST_NAME: {message.from_user.first_name}\nLAST_NAME: {message.from_user.last_name}\nMESSAGE:", messages[-1])
    with open(f"{current_path}\\messages.doc", "a") as file:
        file.write(f"Time: {datetime.datetime.now()}\n")
        file.write(f"USERNAME: {message.from_user.username}\n")
        file.write(f"FIRST_NAME: {message.from_user.first_name}\n")
        file.write(f"LAST_NAME: {message.from_user.last_name}\n")
        file.write(f"MESSAGE: {messages[-1]}\n\n")
    
    bot_answer(message, ["–ø—Ä–∏–≤–µ—Ç", "–∑–¥–∞—Ä–æ–≤–∞", "–π–æ"], "–í–∞–Ω—è, –ª–æ–ª, –¥–∞–π —Ç–µ–ª–µ—Ñ–æ–Ω!")

    bot_id = 0

    
    bot_answer_keyboard(message, 
                        "–ø–æ–º–æ—á—å –≤–∞–Ω–µ?", 
                        ["–î–∞, —Ç–∞–∫ –∏ –±—ã—Ç—å...", "–ù–∏ –≤ –∫–æ–µ–º —Å–ª—É—á–∞–µ!", "–ö–Ω–æ–ø–∫–∞ 3"],
                        "–°–∞–º —Ä–µ—à–∞–π...")

    bot.delete_message(message.chat.id, message_id=bot_id)    

    if message.text.lower() == "–∫–æ–º–∞–Ω–¥—ã":
        commands = """
/start - –∑–∞–ø—É—Å–∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –±–æ—Ç–∞
/time - —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:
–∫—É—Ä—Å –≤–∞–ª—é—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –∫ —Ä—É–±–ª—é
–ø—Ä–∏—à–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É - –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
–ø—Ä–∏—à–ª–∏ –º–µ–º - –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –º–µ–º
–∫–∞–ª–ª–æ—Ä–∏–∏ [–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª] - –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å—É–º–º—É –∫–∞–ª–ª–æ—Ä–∏–π –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
–ø—Ä–∏—à–ª–∏ —Å–º–∞–π–ª [–Ω–∞–∑–≤–∞–Ω–∏–µ] - –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–º–∞–π–ª –ø–æ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä "—Ç–∏–≥—Ä–∞")
"""
        bot.send_message(message.chat.id, commands)

    # –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –í–∞–Ω—è ÔøΩÔøΩ–µ–æ—Ä–≥–∏–µ–≤–∏—á–∞ (–§–∞–º–∏–ª–∏—è —Å–ª–∏—à–∫–æ–º –∏–∑–≤–µ—Å—Ç–Ω–∞—è, —á—Ç–æ–±—ã –µ–µ –Ω–∞–∑—ã–≤–∞—Ç—å)
    if message.text.lower() == "–∫—É—Ä—Å –≤–∞–ª—é—Ç":
        data = requests.get('https://www.cbr-xml-daily.ru/daily_json.js').json()
        USD = data["Valute"]["USD"]["Value"]


    # –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ò–≤–∞–Ω–∞ –ì–µ–æ—Ä–≥–∏–µ–≤–∏—á–∞ (–§–∞–º–∏–ª–∏—è —Å–ª–∏—à–∫–æ–º –∏–∑–≤–µ—Å—Ç–Ω–∞—è, —á—Ç–æ–±—ã –µ–µ –Ω–∞–∑—ã–≤–∞—Ç—å)
    if message.text.lower() == "–∫—É—Ä—Å –≤–∞–ª—é—Ç":
        data = requests.get('https://www.cbr-xml-daily.ru/daily_json.js').json()
        USD = data["Valute"]["USD"]["Value"]
        bot.send_message(message.chat.id, f"–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –∫ –†—É–±–ª—é: {USD}")
        
    # –ü—Ä–∏—Å—ã–ª–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
    if "–ø—Ä–∏—à–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É" in message.text.lower():
        parts = message.text.split(" ")
        found = parts[-1]
        print(found)
        data = requests.get(f'https://www.google.com/search?q={found}')

        soup = BeautifulSoup(data.text, "html.parser")
        img_url = soup.find_all('img')
        print(img_url)
        result = "–ö–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        if len(img_url) > 0:
            result = img_url[0].get('src')
            print(result)
        bot.send_message(message.chat.id, result)


    # –ü—Ä–∏—Å—ã–ª–∞–µ–º –º–µ–º—ã
    if "–ø—Ä–∏—à–ª–∏ –º–µ–º" in message.text.lower():
        bot.send_photo(message.chat.id, random.choice(meme))

    # –°—á–∏—Ç–∞–µ–º –ö–ë–ñ–£ (–ù–µ—Ä–∞–≤–∏–ª—å –°—É–ª—Ç–∞–Ω–æ–≤–∏—á)
    if "–∫–∞–ª–ª–æ—Ä–∏–∏" in message.text.lower():
        # "–∫–∞–ª–ª–æ—Ä–∏–∏ —Ö–ª–µ–± —Å–æ—Å–∏—Å–∫–∞ –∫–µ—Ç—á—É–ø"
        products = message.text.lower().split(" ")
        del products[0]
        products_calls = {
            "—Ö–ª–µ–±": 265,
            "—Ö–ª–µ–± –ø—à–µ–Ω–∏—á–Ω—ã–π": 410,
            "–±—É–ª–æ—á–∫–∞": 45,
            "—Å–æ—Å–∏—Å–∫–∞": 170,
            "–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å": 100,
            "–º–æ—Ä–∫–æ–≤—å": 120,
            "–ø–æ–º–∏–¥–æ—Ä": 50,
            "–æ–≥—É—Ä–µ—Ü": 70,
            "–ø–µ—Ä–µ—Ü": 30,
            "–±–∞–∫–ª–∞–∂–∞–Ω": 20,
            "—á–µ—Å–Ω–æ–∫": 20,
            "–∫—É–∫—É—Ä—É–∑–∞": 150,
            "–ª—É–∫": 40,
            "—Ç–æ–º–∞—Ç": 30,
            "–ø–µ—Ä–µ—Ü —á–µ—Ä–Ω—ã–π": 30,
            "–∫—É—Ä–∏—Ü–∞": 170,
            "–∫–µ—Ç—á—É–ø": 107,
        }

        total_calls = 0
        for product in products:
            if product in products_calls:
                total_calls += products_calls[product]
        bot.send_message(message.chat.id, 
                         f"–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å —Ç–≤–æ–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {total_calls}")

    # –ü—Ä–∏—Å—ã–ª–∞–µ–º —Å–º–∞–π–ª–∏–∫–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É
    if "–ø—Ä–∏—à–ª–∏ —Å–º–∞–π–ª" in message.text.lower():
        parts = message.text.split(" ")
        found = parts[-1]
        if found == "—Ç–∏–≥—Ä–∞":
            bot.send_message(message.chat.id, "üêØ")
        elif found == "–∫–æ—Ç":
            bot.send_message(message.chat.id, "üò∫")
        else:
            bot.send_message(message.chat.id, f"–°–º–∞–π–ª–∫–∞ '{found}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üò¢")

    if message.text.lower() == "–∫–∞–∫ –¥–µ–ª–∞?":
        bot.send_message(message.chat.id, "–í—Å–µ —Ö–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ. –ê –∫–∞–∫ —É —Ç–µ–±—è?")
        bot.register_next_step_handler(message, how_are_you)

    if message.text.lower() == "–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?":
        bot.send_message(message.chat.id, "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ù–µ—Ä–∞–≤–∏–ª—å. –ê –∫–∞–∫ —Ç–µ–±—è?")
        bot.register_next_step_handler(message, get_name)

def wallet(message):
    bot.send_message(message.chat.id, f"")

def get_name(message):
    global name
    name = message.text
    bot.send_message(message.chat.id, f"–†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {name}")

def how_are_you(message):
    global dela
    if message.text.lower() == "–≤—Å–µ —Ö–æ—Ä–æ—à–æ":
        bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ!")

bot.polling(none_stop=True, timeout=0)
